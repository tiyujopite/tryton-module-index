name: Deploy

on:
  push:
    paths:
      - 'src/assets/modules.json'
    branches:
      - main

  workflow_dispatch:

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  update-modules-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 10

      - name: Extract commit IDs
        id: extract_args
        run: |
          COMMITS=$(git log --pretty=format:"%H" ${{ github.event.before }}..${{ github.event.after }})
          ARGS=""
          for COMMIT in $COMMITS; do
            DIFF=$(git show $COMMIT -- src/assets/modules.json || true)
            NEW_KEYS=$(echo "$DIFF" | grep '^+' | grep '"key"' | sed -E 's/.*"key": *"([^"]+)".*/\1/' || true)
            ARGS="$ARGS $NEW_KEYS"
          done
          ARGS=$(echo "$ARGS" | tr '\n' ' ')
          ARGS=$(echo "$ARGS" | tr -s ' ')
          ARGS=$(echo "$ARGS" | sed 's/^ //')
          echo $ARGS
          echo "commit_args=$ARGS" >> $GITHUB_OUTPUT

      - name: Set up Python
        if: ${{ steps.extract_args.outputs.commit_args != '' && steps.extract_args.outputs.commit_args != ' ' }}
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        if: ${{ steps.extract_args.outputs.commit_args != '' && steps.extract_args.outputs.commit_args != ' ' }}
        run: |
          python -m pip install --upgrade pip
          pip install -r api/requirements.txt

      - name: Run api build
        if: ${{ steps.extract_args.outputs.commit_args != '' && steps.extract_args.outputs.commit_args != ' ' }}
        run: |
          python api build ${{ steps.extract_args.outputs.commit_args }}

      - name: Commit data
        if: ${{ steps.extract_args.outputs.commit_args != '' && steps.extract_args.outputs.commit_args != ' ' }}
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Update modules data
